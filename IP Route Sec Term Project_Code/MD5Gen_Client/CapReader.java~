package routeSec;



/******************************************************************************
*CapReader.java: Written as a part of RouteSec Term project for CSC/ECE573
*Authors: Aditya Vyas, Bhavin Shah, Manshi Choudhry, Spoorthi Gururaj 
*Date: 20 Nov 2012
*Written and compiled on Ubuntu 12.04, Eclipse IDE 
*******************************************************************************
*This program uses jNetPCap library available under open-source LGPL license
*http://jnetpcap.com/
*******************************************************************************
*The program forms the portion of the project where we generate the MD5 hash 
*of the packets in the communication between the client and the server. 
*Also used to visually verify the authenticity of the packets as a work around
*to TCP_MD5 sig option.
*This version uses a capture file as opposed to its server counterpart that listens
*and calculates MD5 hash pf packets directly off the NIC
*******************************************************************************
*Running instructions : The program has to be run with root privilege 
*otherwire jNetPcap is not able to find a list of devices. 
******************************************************************************/


import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.io.UnsupportedEncodingException;
import java.nio.ByteBuffer;
import java.security.NoSuchAlgorithmException;
import java.util.ArrayList;  
import java.util.Arrays;
import java.util.Date;  
import java.util.List;  

import org.jnetpcap.Pcap;  
import org.jnetpcap.PcapIf;  
import org.jnetpcap.packet.JMemoryPacket;
import org.jnetpcap.packet.PcapPacket;  
import org.jnetpcap.packet.PcapPacketHandler;  
import org.jnetpcap.packet.format.FormatUtils;
import org.jnetpcap.protocol.lan.Ethernet;
import org.jnetpcap.protocol.network.Ip4;
import org.jnetpcap.protocol.tcpip.Tcp;
import java.io.FileWriter;
import java.io.IOException;

/******************************************************************************
*Class: CapReader
*The starter class for CapReader.java
*Please replace the file name by the capture file to be read 
******************************************************************************/

public class CapReader {

/******************************************************************************
*Method: main
******************************************************************************/
	
	public static void main(String args[]) throws IOException{
		
    	final StringBuilder errbuf = new StringBuilder(); 
	  
	final String file = "/home/spoorthi/Desktop/ie_aurora_exploitWin2k3.pcap";  

	System.out.printf("Opening file for reading: %s%n", file);  
     
	Pcap pcap1 = Pcap.openOffline(file, errbuf);  

	if (pcap1 == null) {  
		System.err.printf("Error while opening device for capture: "  
				+ errbuf.toString());  
		return;  
	}
  
/******************************************************************************
* Packet handler to be called every time a packet is received. 
******************************************************************************/

	PcapPacketHandler<String> jpacketHandler = new PcapPacketHandler<String>() {  

		public void nextPacket(PcapPacket packet, String user) {  
			
			System.out.printf("Received at %s caplen=%-4d len=%-4d %s\n",   
					new Date(packet.getCaptureHeader().timestampInMillis()),   
					packet.getCaptureHeader().caplen(), // Length actually captured  
					packet.getCaptureHeader().wirelen(), // Original length  
					user // User supplied object  
					);//
               
		   Tcp tcp = packet.getHeader(new Tcp());
			long seqn= tcp.seq();
		   String spacket = packet.toString();
			//System.out.pripntln(spacket);
			
			try {
				String MD5_ad1 = Md5Genrator.MD5(spacket);
				System.out.println("Hash of packet  :::"+MD5_ad1+"\n");
				Md5Genrator.wIf(seqn,MD5_ad1);
			} catch (NoSuchAlgorithmException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			} catch (UnsupportedEncodingException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			} 
           
			//packet.scan(Ethernet.ID); //Need to be done before doing any edits
          catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}

					}  
	};  
	
	try {  
		pcap1.loop(100, jpacketHandler, "Hash of this packet is \n");  
	} finally { 
		pcap1.close();
		
	}
		
	}
	
	
	
}
